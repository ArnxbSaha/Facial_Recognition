# -*- coding: utf-8 -*-
"""Facial Recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bPfn6rj-v7QTXEMUEBveeTEkljuozb81
"""

!pip install face_recognition

import os
import pandas as pd
import matplotlib.pyplot as plt
import face_recognition
import numpy as np
import cv2
import csv

training_folder = "/content/drive/MyDrive/CV/train/"

test_folder = "/content/drive/MyDrive/CV/test/"

label_file = "/content/drive/MyDrive/CV/train.csv"

results_file = "/content/drive/MyDrive/CV/results_file.csv"

# Read the CSV file and store the labels in a dictionary
labels = {}
with open(label_file) as f:
    reader = csv.DictReader(f)
    for row in reader:
        labels[row['File Name']] = row['Category']

# Load the training images and their labels
training_data = []
for filename in os.listdir(training_folder):
    if filename.endswith(".jpg"):
        image_path = os.path.join(training_folder, filename)
        image = face_recognition.load_image_file(image_path)
        face_locations = face_recognition.face_locations(image)
        if len(face_locations) == 1:
            face_encoding = face_recognition.face_encodings(image, face_locations)[0]
            label = labels[filename]
            training_data.append((face_encoding, label))

# Create the results file and write the header row
with open(results_file, mode='w') as f:
    writer = csv.writer(f)
    writer.writerow(['Id', 'Category'])

    # Loop through all the test image files in the folder
    for filename in os.listdir(test_folder):
        if filename.endswith(".jpg"):
            # Load the test image file and find the face locations
            test_image_path = os.path.join(test_folder, filename)
            test_image = face_recognition.load_image_file(test_image_path)
            test_face_locations = face_recognition.face_locations(test_image)

            # If there is only one face in the test image, encode it and compare with the training images
            if len(test_face_locations) == 1:
                test_face_encoding = face_recognition.face_encodings(test_image, test_face_locations)[0]
                matches = face_recognition.compare_faces([td[0] for td in training_data], test_face_encoding)
                
                # Find the best match and predict the label
                best_match_index = matches.index(True) if True in matches else -1
                if best_match_index != -1:
                    predicted_label = training_data[best_match_index][1]
                    writer.writerow([filename, predicted_label])
                else:
                    writer.writerow([filename, "No match found"])
            else:
                writer.writerow([filename, f"{len(test_face_locations)} faces detected, skipping"])

# Load the CSV file into pandas
df = pd.read_csv("/content/drive/MyDrive/CV/results_file.csv")

# Remove the ".jpg" extension from each filename in the Id column
df["Id"] = df["ID"].str.replace(".jpg", "")

# Sort the data numerically in the Id column
df_sorted = df.sort_values('File Name')

# Save the updated data back to the CSV file
df.to_csv("/content/drive/MyDrive/CV/results_file.csv", index=False)